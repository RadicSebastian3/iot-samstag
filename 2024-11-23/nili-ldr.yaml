substitutions:
  name: "nili3"

esphome:
  name: ${name}
  # platform: ESP32
  # board: featheresp32
  # platformio_options:
  #   board_upload.flash_size: 16MB
  #   board_build.partitions: "../../../custom_partitions.csv"

# esp32:
#   board: esp32dev
#   framework:
#     type: esp-idf
#     version: recommended
#     # Custom sdkconfig options
#     sdkconfig_options:
#       COMPILER_OPTIMIZATION_SIZE: y
#     # Advanced tweaking options
#     advanced:
#       ignore_efuse_mac_crc: false

esp32:
  board: esp32dev
  framework:
    type: arduino



logger:

# api:
#   encryption:
#     key: "BntVVPNZbPNC5UzN9oL4XDDXj6xtatU7aVjumB4EJwY="

ota:
  password: "585353d758e3f126d2f4982f0695d956"
  platform: esphome

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  ap:
    ssid: "NiLi LDR Hotspot"
    password: "g0MuFWdXxO2k"

web_server:
  port: 80

mqtt:
  broker: !secret mqtt_broker
  username: !secret mqtt_user
  password: !secret mqtt_password

captive_portal:

# esp32_ble_tracker:
# bluetooth_proxy:
#   active: true

i2c:
  sda: 21
  scl: 22
  # scan: true
  id: bus_a

uart:
  rx_pin: GPIO13
  tx_pin: GPIO12
  baud_rate: 9600

sensor:

  # - platform: xiaomi_hhccjcy01
  #   mac_address: 80:EA:CA:88:DB:D9
  #   temperature:
  #     name: "Sagopalme Temperature"
  #   moisture:
  #     name: "Sagopalme Moisture"
  #   illuminance:
  #     name: "Sagopalme Illuminance"
  #   conductivity:
  #     name: "Sagopalme Soil Conductivity"
  #   battery_level:
  #     name: "Sagopalme Battery Level"

  # - platform: xiaomi_hhccjcy01
  #   mac_address: C4:7C:8D:66:CD:B3
  #   temperature:
  #     name: "Baumstrelizie Temperature"
  #   moisture:
  #     name: "Baumstrelizie Moisture"
  #   illuminance:
  #     name: "Baumstrelizie Illuminance"
  #   conductivity:
  #     name: "Baumstrelizie Soil Conductivity"
  #   battery_level:
  #     name: "Baumstrelizie Battery Level"

  - platform: bme280_i2c
    i2c_id: bus_a
    address: 0x76
    update_interval: 10s
    temperature:
      name: ${name}_Temperature
      id: temperature
      oversampling: 16x
      accuracy_decimals: 1
      filters:
        - lambda: return x-6;
    pressure:
      name: ${name}_Pressure
      id: pressure
    humidity:
      name: ${name}_Humidity
      id: humidity

  - platform: adc
    pin: GPIO32
    name: ${name}_Illuminance
    id: illuminance
    update_interval: 10s

  - platform: mhz19
    co2:
      name: ${name}_CO2
      id: co2
      on_value:
        then:
          - logger.log:
              format: "MHZ19 reports co2 value %.1f"
              args: [ 'id(co2).state' ]        
          - if:
              condition:
                sensor.in_range:
                  id: co2
                  below: 600.0
              then:
                - light.turn_on:
                    id: neopixel
                    brightness: 30%
                    red: 0%
                    green: 100%
                    blue: 0%    
          - if:
              condition:
                sensor.in_range:
                  id: co2
                  above: 600.0
                  below: 1200.0
              then:
                - light.turn_on:
                    id: neopixel
                    brightness: 30%
                    red: 0%
                    green: 0%
                    blue: 100%    
          - if:
              condition:
                sensor.in_range:
                  id: co2
                  above: 1200.0
              then:
                - light.turn_on:
                    id: neopixel
                    brightness: 100%
                    red: 100%
                    green: 0%
                    blue: 0%    

      on_value_range:
        - below: 600
          then:
            - logger.log: "MHZ19 below 600"
            - light.turn_on:
                id: neopixel
                brightness: 30%
                red: 0%
                green: 100%
                blue: 0%    
        - above: 600
          below: 1000
          then:
            - logger.log: "MHZ19 600 - 1000"
            - light.turn_on:
                id: neopixel
                brightness: 50%
                red: 0%
                green: 0%
                blue: 100%    
        - above: 1000
          then:
            - logger.log: "MHZ19 above 1000"
            - light.turn_on:
                id: neopixel
                brightness: 100%
                red: 100%
                green: 0%
                blue: 0%    
    temperature:
      name: ${name}_MH-Z19 Temperature
      id: mhz19temperature
    update_interval: 10s
    automatic_baseline_calibration: false    

binary_sensor:
  - platform: gpio
    pin: 25
    name: ${name}_Motion
    id: motion
    device_class: motion

light:
  - platform: neopixelbus
    type: GRB
    variant: WS2812
    pin: GPIO27
    num_leds: 1
    name: ${name}_NeoPixel
    id: neopixel
    on_turn_on:
      then:
        - light.turn_on:
            id: neopixel
            brightness: 30%
            red: 100%
            green: 0%
            blue: 0.0    

